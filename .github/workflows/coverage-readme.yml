name: Coverage (badges to gh-pages)

on:
  push:
    branches: [ main ]             # sadece main'e merge sonrası çalışır
    paths:
      - 'src/**'
      - 'tests/**'
      - 'SGuard.sln'
      - '**/*.csproj'
      - 'coverlet.runsettings'
  workflow_dispatch:

permissions:
  contents: write                  # gh-pages'a push için

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
            9.0.x

      - name: Restore
        run: dotnet restore SGuard.sln

      - name: Build
        run: dotnet build SGuard.sln -c Release --no-restore

      - name: Test (with coverage)
        run: >
          dotnet test SGuard.sln -c Release --no-build
          --settings coverlet.runsettings
          --collect:"XPlat Code Coverage"
          --logger "trx;LogFileName=test_results.trx"

      - name: Install ReportGenerator
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          echo "$HOME/.dotnet/tools" >> "$GITHUB_PATH"

      - name: Generate badges only
        run: |
          reportgenerator \
            -reports:"**/coverage.cobertura.xml" \
            -targetdir:"site" \
            -reporttypes:"Badges" \
            -assemblyfilters:"+SGuard*;-*Tests"
          # site/badges/badge_linecoverage.svg ve badge_branchcoverage.svg üretilecek

      - name: Publish badges to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages
          keep_files: true